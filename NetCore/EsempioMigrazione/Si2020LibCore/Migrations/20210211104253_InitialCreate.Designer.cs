// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Si2020Lib.Context;

namespace Si2020LibCore.Migrations
{
    [DbContext(typeof(SiDb))]
    [Migration("20210211104253_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Si2020Lib.Model.Evento", b =>
                {
                    b.Property<int>("ID_Evento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ID_AmbitoEvento")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Personale")
                        .HasColumnType("int");

                    b.Property<int>("ID_PrioritaEvento")
                        .HasColumnType("int");

                    b.Property<string>("ID_Stabilimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_StatoEvento")
                        .HasColumnType("int");

                    b.Property<int>("ID_TipoEvento")
                        .HasColumnType("int");

                    b.Property<int>("ID_Utente")
                        .HasColumnType("int");

                    b.Property<int>("Progressivo")
                        .HasColumnType("int");

                    b.Property<int>("ProgressivoAnno")
                        .HasColumnType("int");

                    b.Property<string>("RepartoPrimario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepartoSecondario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RifQualifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Scadenza")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Titolo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Evento");

                    b.ToTable("TFF_Eventi");
                });

            modelBuilder.Entity("Si2020Lib.Model.Garanzia", b =>
                {
                    b.Property<int>("ID_Garanzia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAcquisto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fornitore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Anagrafe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MesiGaranzia")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScadenzaGaranzia")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoGaranzia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Garanzia");

                    b.ToTable("TFF_Garanzie");
                });

            modelBuilder.Entity("Si2020Lib.Model.LDAP", b =>
                {
                    b.Property<int>("ID_LDAP")
                        .HasColumnType("int");

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<int>("ID_Personale")
                        .HasColumnType("int");

                    b.Property<string>("LoginLDAP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_LDAP");

                    b.HasIndex("ID_Personale");

                    b.ToTable("VFF_LDAP");
                });

            modelBuilder.Entity("Si2020Lib.Model.Log", b =>
                {
                    b.Property<int>("ID_Log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampoVariato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampoVariatoLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataOra")
                        .HasColumnType("datetime2");

                    b.Property<string>("RiferimentoLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoOperazione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Utente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorePrecedente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValoreSuccessivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Log");

                    b.ToTable("TFF_Log");
                });

            modelBuilder.Entity("Si2020Lib.Model.Personale", b =>
                {
                    b.Property<int>("ID_Personale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepartoPrincipale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepartoSecondario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stato")
                        .HasColumnType("int");

                    b.HasKey("ID_Personale");

                    b.ToTable("VFF_Personale");
                });

            modelBuilder.Entity("Si2020Lib.Model.SistemaOperativo", b =>
                {
                    b.Property<int>("ID_SistemaOperativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ordinamento")
                        .HasColumnType("int");

                    b.HasKey("ID_SistemaOperativo");

                    b.ToTable("TFF_SistemiOperativi");
                });

            modelBuilder.Entity("Si2020Lib.Model.StatoAnagrafe", b =>
                {
                    b.Property<int>("ID_StatoAnagrafe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ordinamento")
                        .HasColumnType("int");

                    b.HasKey("ID_StatoAnagrafe");

                    b.ToTable("TFF_StatiAnagrafe");
                });

            modelBuilder.Entity("Si2020Lib.Model.StatoQualifica", b =>
                {
                    b.Property<int>("ID_StatoQualifica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_StatoQualifica");

                    b.ToTable("TFF_StatiQualifica");
                });

            modelBuilder.Entity("Si2020Lib.Model.TipoAnagrafe", b =>
                {
                    b.Property<int>("ID_TipoAnagrafe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnagrafePrincipale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceHardware")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TipoAutomation")
                        .HasColumnType("bit");

                    b.Property<bool>("TipoOperation")
                        .HasColumnType("bit");

                    b.HasKey("ID_TipoAnagrafe");

                    b.ToTable("TFF_TipiAnagrafe");
                });

            modelBuilder.Entity("Si2020Lib.Model.Utente", b =>
                {
                    b.Property<int>("ID_Utente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("CognomeNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dominio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ordinamento")
                        .HasColumnType("int");

                    b.Property<bool>("UtenteAutomation")
                        .HasColumnType("bit");

                    b.Property<bool>("UtenteOperation")
                        .HasColumnType("bit");

                    b.HasKey("ID_Utente");

                    b.ToTable("TFF_Utenti");
                });

            modelBuilder.Entity("Si2020Lib.Model.LDAP", b =>
                {
                    b.HasOne("Si2020Lib.Model.Personale", "Personale")
                        .WithMany("LDAP")
                        .HasForeignKey("ID_Personale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personale");
                });

            modelBuilder.Entity("Si2020Lib.Model.Personale", b =>
                {
                    b.Navigation("LDAP");
                });
#pragma warning restore 612, 618
        }
    }
}
